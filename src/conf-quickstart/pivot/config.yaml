# The port on which the Pivot server will listen on.
port: 9095

clusters:
  - name: druid
    type: druid

    # A Druid broker node that can serve data (only used if you have Druid based data source)
    host: localhost:8082

    # Use SegmentMetadataQuery for introspection, rather than Broker GET routes.
    useSegmentMetadata: true

    # Background introspection frequency (in ms)
    # - Set to '0' to disable background introspection.
    sourceListRefreshInterval: 0

    # Foreground introspection
    # Checks for new dataSources every time Pivot is loaded (default: false)
    sourceListRefreshOnLoad: true

# The data sources that you have configured, these will appear, in order, inside the navigation menu of Pivot
# In general there can be two types of 'engine':
#   - native: a JSON file that is crunched within plywood itself (useful for small datasets and testing)
#   - druid: a Druid dataSource
dataSources:
  - name: wikiticker
    title: Wikiticker Quickstart
    engine: druid # Set the engine to druid
    source: wikiticker # The druid dataSource

    # The refresh rule describes how often the data source looks for new data, it has to be fixed here since this data source is static
    refreshRule:
      rule: fixed # also possible: 'query' and 'realtime'
      time: 2015-09-13T00:00:00Z

    dimensions:
      - name: __time
        kind: time

      - name: channel

      - name: cityName

      - name: comment

      - name: countryIso
        title: Country ISO
        expression: $countryIsoCode

      - name: countryName

      - name: isAnonymous

      - name: isMinor

      - name: isNew

      - name: isRobot

      - name: isUnpatrolled

      - name: metroCode

      - name: namespace

      - name: page

      - name: regionIso
        title: Region ISO
        expression: $regionIsoCode

      - name: regionName

      - name: user

    measures:
      - name: count
        title: Edits
        expression: $main.sum($count)

      - name: delta

      - name: avg_delta
        expression: $main.sum($delta) / $main.sum($count)

      - name: added

      - name: avg_added
        expression: $main.sum($added) / $main.sum($count)

      - name: deleted

      - name: avg_deleted
        expression: $main.sum($deleted) / $main.sum($count)

      - name: unique_users
        title: Unique Users
        expression: $main.countDistinct($user_unique)


  - name: metrics
    title: Metrics Quickstart
    engine: druid # Set the engine to druid
    source: metrics # The druid dataSource

    refreshRule:
      rule: query
      refresh: PT5S

    dimensions:
      - name: __time
        kind: time

    measures:
      - name: count
        title: Count
        expression: $main.sum($count)

      - name: value_sum
        title: Sum
        expression: $main.sum($value_sum)

      - name: value_avg
        title: Average
        expression: $main.sum($value_sum) / $main.sum($count)

      - name: value_min
        title: Min
        expression: $main.min($value_min)

      - name: value_max
        title: Max
        expression: $main.max($value_max)


  - name: metrics-kafka
    title: Metrics Kafka Quickstart
    engine: druid # Set the engine to druid
    source: metrics-kafka # The druid dataSource

    refreshRule:
      rule: query
      refresh: PT5S

    dimensions:
      - name: __time
        kind: time

    measures:
      - name: count
        title: Count
        expression: $main.sum($count)

      - name: value_sum
        title: Sum
        expression: $main.sum($value_sum)

      - name: value_avg
        title: Average
        expression: $main.sum($value_sum) / $main.sum($count)

      - name: value_min
        title: Min
        expression: $main.min($value_min)

      - name: value_max
        title: Max
        expression: $main.max($value_max)
